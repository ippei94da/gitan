#! /usr/bin/env ruby
# coding: utf-8

#Pull every working tree that has update on remote.
#Example: gitanpull ygg --repository=example.com:/home/git

require "optparse"
require "gitan"

OPTIONS = {}
op = OptionParser.new
op.on("-r repo", "--repository=repo", "Indicate repository."){ |repo|
  server, path = repo.split(":")
  OPTIONS[:with_remote] = Gitan.remote_heads(server, path)
}
op.parse!(ARGV)

git_dir = ENV["HOME"] + "/git"
remote = ARGV[0]

Dir.glob(git_dir + "/*").sort.map do |path|
  next unless File.directory? path
  head = OPTIONS[:with_remote][File.basename(path)] if OPTIONS[:with_remote]
  repo = Gitan::Repo.new(path, head)
  if repo.to_be_pulled?
    print "#{path}: "
    Dir.chdir path
    puts "git pull #{remote} master"
    system "git pull #{remote} master"
  end
end

