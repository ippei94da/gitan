#! /usr/bin/env ruby
# coding: utf-8


#require "optparse"
#require "yaml"
#require "gitan"
#
### option analysis
#OPTIONS = {}
#op = OptionParser.new
#op.on("-r repo", "--with-remote=repo", "With remote info."){ |repo|
#  #E.g., repo=yggdrasil.myhome.cx:/home/git
#  server, path = repo.split(":")
#  OPTIONS[:with_remote] = Gitan.remote_heads(server, path)
#}
#op.parse!(ARGV)
#
#if ARGV.empty?
#  git_dir = ENV["HOME"] + "/git"
#else
#  git_dir = File::expand_path(ARGV[0])
#end
#
#Gitan::Repo.show_abbreviation($stdout)
#Dir.glob(git_dir + "/*").sort.map do |path|
#  next unless File.directory? path
#  head = OPTIONS[:with_remote][File.basename(path)] if OPTIONS[:with_remote]
#  repo = Gitan::Repo.new(path, head)
#  puts repo.short_status
#end
